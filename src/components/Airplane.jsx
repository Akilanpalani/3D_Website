
// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.2.15 public/models/model/airplane3.glb 
// */

// // import React, { useRef } from 'react'
// // import { useGLTF } from '@react-three/drei'
// // import { useFrame } from '@react-three/fiber'


// // const HELIX_SPEED = 6;

// // export function Airplane(props) {
// //   const { nodes, materials } = useGLTF('/models/model/airplane3.glb')

// //   const helix = useRef()

// //   useFrame((_state,delta) => {
// //     helix.current.rotation.x += delta * HELIX_SPEED
// //   })
// //   return (
// //     <group {...props} dispose={null}>
// //       <mesh geometry={nodes.PUSHILIN_Plane_Circle000.geometry} material={materials['plane.001']} />
// //       <mesh ref={helix} geometry={nodes.PUSHILIN_Plane_Circle001.geometry} material={materials['plane.001']} />
// //     </group>
// //   )
// // }

// // useGLTF.preload('/models/model/airplane3.glb')

// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'
// import { useFrame } from 'react-three-fiber';
// import * as THREE from 'three';
// const HELIX_SPEED = 10;
// export function Airplane(props) {
//   const { nodes, materials } = useGLTF('/models/model/airplane4.glb')

//   const helix = useRef();

//   useFrame((_state, delta) => {
//     helix.current.rotation.x += delta * HELIX_SPEED
//   })
//   return (
//     <group {...props} dispose={null}>
//       <mesh geometry={nodes.PUSHILIN_Plane_Circle000.geometry} material={materials['plane.005']} />
//       <mesh ref={helix} geometry={nodes.PUSHILIN_Plane_Circle001.geometry} material={materials['plane.005']} />
//     </group>
//   )
// }

// useGLTF.preload('/models/model/airplane4.glb')

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from 'react-three-fiber';


export function Airplane(props) {
  const { nodes, materials } = useGLTF('/models/model.glb')

  const HELIX_SPEED = 6;
  const helix = useRef();
  useFrame((_state, delta) => {
    helix.current.rotation.x += delta * HELIX_SPEED
  })
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.PUSHILIN_Plane_Circle000.geometry} material={materials.plane}>
        <meshStandardMaterial color="white" /></mesh>
      <mesh ref={helix} geometry={nodes.PUSHILIN_Plane_Helix.geometry} material={materials.plane} position={[1.09, 0.23, 0]} >
        <meshStandardMaterial color="white" />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/model.glb')
