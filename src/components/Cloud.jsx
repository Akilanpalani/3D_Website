/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/model/cloud.gltf 
*/

// import React from 'react'
// import { useGLTF } from '@react-three/drei'

// export function Cloud({opacity,...props}) {
//   const { nodes } = useGLTF('/models/model/cloud.glb')
//   return (
//     <group {...props} dispose={null}>
//       <mesh geometry={nodes.Node.geometry}>
//         <meshStandardMaterial envMapIntensity={2} transparent opacity={opacity}/>
//         </mesh>
//     </group>
//   )
// }

// useGLTF.preload('/models/model/cloud.glb')

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { fadeOnBeforeCompile } from './utils/fadeMaterial'
import { useFrame } from 'react-three-fiber';

export function Cloud({ sceneOpacity, ...props }) {
  const { nodes, materials } = useGLTF('/models/model/clouds.gltf')

  const materialRef = useRef();

  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  })
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Mball001.geometry}>
        <meshStandardMaterial 
        ref={materialRef}
        onBeforeCompile={fadeOnBeforeCompile}
        envMapIntensity={2} 
        transparent />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/model/clouds.gltf')
